<?xml version="1.0" encoding="ISO-8859-1" ?>
<!DOCTYPE taglib
  PUBLIC "-//Sun Microsystems, Inc.//DTD JSP Tag Library 1.2//EN"
  "http://java.sun.com/dtd/web-jsptaglibrary_1_2.dtd">
<taglib>
  <tlib-version>1.0</tlib-version>
  <jsp-version>1.2</jsp-version>
  <short-name>jscontrolstags-ajax</short-name>
  <display-name>JS Controls Taglib AJAX</display-name>
  <description>Javascript controls library with AJAX</description>

  <tag>
    <name>slider</name>
    <tag-class>net.sourceforge.jscontrolstags.tags.ajax.slider.AjaxSliderTag</tag-class>
    <description>
      Ajax Slider.
    </description>
    
    <attribute>
      <name>var</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>Name of the JavaScript object created</description>
    </attribute>

    <attribute>
      <name>attachTo</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Name of the JavaScript object to which select box will attach.  You must define 'var'
        for this to work.
      </description>
    </attribute>

    <attribute>
      <name>source</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        HTML Div id slider container 
      </description>
    </attribute>

    <attribute>
      <name>trackWidth</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Slider track width
      </description>
    </attribute>
    
    <attribute>
      <name>trackHeight</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Slider track height
      </description>
    </attribute>
    
    <attribute>
      <name>trackClassName</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Class name for DIV track slider
      </description>
    </attribute>

    <attribute>
      <name>trackClassName2</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Class name for DIV track slider (when you want manage 2 pictures)
      </description>
    </attribute> 
    
    <attribute>
      <name>handlesClassName</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Class name for DIV handle slider. If there are several class name 
        (separated with ,), there will be serveral handle.
      </description>
    </attribute>

    <attribute>
      <name>handlesWidth</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Slider handles width
      </description>
    </attribute>
    
    <attribute>
      <name>handlesHeight</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Slider handles height
      </description>
    </attribute>
            
    <attribute>
      <name>sliderValue</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
       Set value for slider, if defaultValue is a valid double.
       If there is several handle 'see attribute handlesClassName)
       construct a Array with value like this : [0.1,0.4]
      </description>
    </attribute>        

	<attribute>
      <name>textBox</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
       If textBox is not null, Slider is attached to textBox. 
      </description>
    </attribute>  

	<attribute>
      <name>onSlide</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
       Event on slide launched when slider is sliding.
      </description>
    </attribute>       
    
	<attribute>
      <name>axis</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
       Axis 'horizontal' or 'vertical'
      </description>
    </attribute> 

	<attribute>
      <name>sliderValues</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
       eg : [2,4,6,8]
      </description>
    </attribute> 

	<attribute>
      <name>range</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
       eg : $R(2,15)
      </description>
    </attribute>  

	<attribute>
      <name>increment</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>

      </description>
    </attribute> 
    
	<attribute>
      <name>step</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>

      </description>
    </attribute>    
    
	<attribute>
      <name>maximum</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>

      </description>
    </attribute>  
    
	<attribute>
      <name>minimum</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>

      </description>
    </attribute>  
    
	<attribute>
      <name>restricted</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
			// true or false
      </description>
    </attribute>                   
    <!-- AJAX Parameters  -->
    
	<attribute>
      <name>baseUrl</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        URL of server-side action or servlet 
      </description>
    </attribute>

    <attribute>
      <name>parameters</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        A comma-separated list of parameters to pass to the server-side action or servlet
      </description>
    </attribute>

    <attribute>
      <name>sucessFunction</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Function to execute when AJAX slider action returns JSONArray.
      </description>
    </attribute>
    
    <attribute>
      <name>postFunction</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Function to execute after Ajax is finished, allowing for a chain of additional functions to
        execute
      </description>
    </attribute>
 
     <attribute>
      <name>preFunction</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>Function to execute before Ajax is begun. Return false if Slider must not launch Ajax request.</description>
    </attribute>

    <attribute>
      <name>errorFunction</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Function to execute if there is a server exception (non-200 HTTP response)
      </description>
    </attribute>
  </tag>
  
  <!-- TREEVIEW DYNAMIC -->
  <tag>
  	<name>treeview-dyn</name>
    <tag-class>net.sourceforge.jscontrolstags.tags.ajax.treeview.DynamicTreeviewTag</tag-class>
    <description>
      Ajax Treeview build dynamicly
    </description>

    <attribute>
      <name>tree</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Treeview Object JAVA
      </description>
    </attribute> 
    
    <attribute>
      <name>source</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>HTML Div treeview container </description>
    </attribute>
 
     <attribute>
      <name>imgBase</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	Image base directory (close/open node image,...).
      </description>
    </attribute>

 	<attribute>
      <name>defaultImg</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	Default Image to use when tree node has children.
      </description>
    </attribute>
    
    <attribute>
      <name>defaultImgOpen</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	Default Image to use when tree node is opened.
      </description>
    </attribute>
    
    <attribute>
      <name>defaultImgClose</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	Default Image to use when tree node is closed.
      </description>
    </attribute>   

     <attribute>
      <name>generate</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.Boolean</type>
      <description>
      	True if treeview must be generated (by default true).
      </description>
    </attribute>      

     <attribute>
      <name>generateBigTree</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.Boolean</type>
      <description>
      	True if treeview must generate a big tree.
      </description>
    </attribute> 
           
    <attribute>
      <name>var</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	Name of the JavaScript object treeview created.
      </description>
    </attribute>
        
 	<attribute>
      <name>baseUrl</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        URL of server-side when a node must be open with AJAX,... 
      </description>
    </attribute>
 
    <attribute>
      <name>width</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	Treeview width.
      </description>
    </attribute>

    <attribute>
      <name>height</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	Treeview height.
      </description>
    </attribute>
    
    <attribute>
      <name>checkboxesThreeState</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.Boolean</type>
      <description>
      	True if treeview is enable manage checkbox with three states.
      </description>
    </attribute>
    
    <attribute>
      <name>multiline</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.Boolean</type>
      <description>
      	True if treeview is enable to manage multiline into text node. 
      </description>
    </attribute>    
            
	<attribute>
      <name>openAtLoad</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.Boolean</type>
      <description>
      	True if treeview must be opened on load page.
      </description>
    </attribute>               

	<attribute>
      <name>draggables</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.Boolean</type>
      <description>
      	True if all nodes must be draggables.
      </description>
    </attribute>     

    <attribute>
      <name>behaviourDrop</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	Behvaiour drop : 'sibling' to insert node (with ALT) into another node, and 'child' to move the node.
      	Default behaviour is 'child'.
      </description>
    </attribute>

  </tag>       

  <!-- TREEVIEW VIEW (Defined into JSP) -->
  <tag>
  	<name>treeview-view</name>
    <tag-class>net.sourceforge.jscontrolstags.tags.ajax.treeview.ViewTreeviewTag</tag-class>
    <description>
      Ajax Treeview build into view JSP.
    </description>
    
    <attribute>
      <name>source</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	HTML Div treeview container.
      </description>
    </attribute>
 
     <attribute>
      <name>imgBase</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	Image base directory (close/open node image,...).
      </description>
    </attribute>

 	<attribute>
      <name>defaultImg</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	Default Image to use when tree node has children.
      </description>
    </attribute>
    
    <attribute>
      <name>defaultImgOpen</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	Default Image to use when tree node is opened.
      </description>
    </attribute>
    
    <attribute>
      <name>defaultImgClose</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	Default Image to use when tree node is closed.
      </description>
    </attribute>   

     <attribute>
      <name>generate</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.Boolean</type>
      <description>
      	True if treeview must be generated (by default true).
      </description>
    </attribute>      

     <attribute>
      <name>generateBigTree</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.Boolean</type>
      <description>
      	True if treeview must generate a big tree.
      </description>
    </attribute> 
           
    <attribute>
      <name>var</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	Name of the JavaScript object treeview created.
      </description>
    </attribute>
        
 	<attribute>
      <name>baseUrl</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        URL of server-side when a node must be open with AJAX,... 
      </description>
    </attribute>
 
    <attribute>
      <name>width</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	Treeview width.
      </description>
    </attribute>

    <attribute>
      <name>height</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	Treeview height.
      </description>
    </attribute>
    
    <attribute>
      <name>checkboxesThreeState</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.Boolean</type>
      <description>
      	True if treeview is enable manage checkbox with three states.
      </description>
    </attribute>
    
    <attribute>
      <name>multiline</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.Boolean</type>
      <description>
      	True if treeview is enable to manage multiline into text node. 
      </description>
    </attribute>    
            
	<attribute>
      <name>openAtLoad</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.Boolean</type>
      <description>
      	True if treeview must be opened on load page.
      </description>
    </attribute>               

	<attribute>
      <name>draggables</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.Boolean</type>
      <description>
      	True if all nodes must be draggables.
      </description>
    </attribute>     

    <attribute>
      <name>behaviourDrop</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	Behvaiour drop : 'sibling' to insert node (with ALT) into another node, and 'child' to move the node.
      	Default behaviour is 'child'.
      </description>
    </attribute>
                    
  </tag>     

  <tag>
  	<name>treenode</name>
    <tag-class>net.sourceforge.jscontrolstags.tags.ajax.treeview.TreeNodeTag</tag-class>
    <description>
      Tree node works with treeview-view taglib.
    </description>
    
    <attribute>
      <name>id</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	Tree node ID.
      </description>
    </attribute>
    
	<attribute>
      <name>title</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	Title of tree node.
      </description>
    </attribute>   

	<attribute>
      <name>titleKey</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	Key title which is used to get label of title into Resources file (ApplicationResources or Resource Bundle).
	  </description>
    </attribute>   

	<attribute>
      <name>img</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	Image to use when tree node has children. 
      	If this parameter is not filled, tree node will use defaultImg parameter. 
      </description>
    </attribute> 

	<attribute>
      <name>imgopen</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	Image to use when tree node is opened.
      	If this parameter is not filled, tree node will use defaultImgOpen parameter. 
      </description>
    </attribute>  
    
	<attribute>
      <name>imgclose</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	Image to use when tree node is closed.
      	If this parameter is not filled, tree node will use defaultImgClose parameter. 
      </description>
    </attribute> 

	<attribute>
      <name>styleClass</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	CSS style class of tree node.
      </description>
    </attribute>

	<attribute>
      <name>draggable</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.Boolean</type>
      <description>
      	True if node can be draggable.
      </description>
    </attribute>                   

 	<attribute>
      <name>acceptdrop</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.Boolean</type>
      <description>
      	True if node accept drop.
      </description>
    </attribute>
    
 	<attribute>
      <name>editable</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.Boolean</type>
      <description>
      	True if node can be editable.
      </description>
    </attribute> 

 	<attribute>
      <name>last</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.Boolean</type>
      <description>
      	True if node is the last node of treeview.
      </description>
    </attribute> 
           
	<attribute>
      <name>onclick</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	On click javascript function.
      </description>
    </attribute>   

	<attribute>
      <name>ondrop</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	On drop javascript function.
      </description>
    </attribute>   

	<attribute>
      <name>onmouseout</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	On mouse out javascript function.
      </description>
    </attribute>  
    
	<attribute>
      <name>onmouseover</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	On mouse over javascript function.
      </description>
    </attribute>

	<attribute>
      <name>ondblclick</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	On double click javascript function.
      </description>
    </attribute>  

	<attribute>
      <name>onedit</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	On edit javascript function.
      </description>
    </attribute> 
    
    <attribute>
      <name>openAjax</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.Boolean</type>
      <description>
      	True if tree node must be opened with AJAX. URL server side called is baseUrl filled into treeview root.
      </description>
    </attribute>

    <attribute>
      <name>editAjax</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.Boolean</type>
      <description>
      	True if tree node must be editable with AJAX. URL server side called is baseUrl filled into treeview root.
      </description>
    </attribute>
                  
     <attribute>
      <name>dropAjax</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <type>java.lang.Boolean</type>
      <description>
      	True if tree node must be draggable with AJAX. URL server side called is baseUrl filled into treeview root.
      </description>
    </attribute>                 
                                                         
  </tag>

 <tag>
    <name>messageQueue</name>
    <tag-class>net.sourceforge.jscontrolstags.tags.ajax.messagequeue.AjaxMessageQueueTag</tag-class>
    <description>
      Ajax Message Queue is able to received messages from server. Server messages
      are stored into Queue. Each Queue has context (log4j, ...) and a scope (application, session and request).
    </description>
    
    <attribute>
      <name>var</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>Name of the JavaScript AjaxMessageQueue created.</description>
    </attribute>

    <attribute>
      <name>source</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        HTML element to update when messages are received from server.
      </description>
    </attribute>

    <attribute>
      <name>context</name>
      <required>true</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	Context (log4j, ...) of the queue to poll messages.
      </description>
    </attribute>

    <attribute>
      <name>scope</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	Scope (application, session and request) of the queue to poll messages.
      	By default scope=application.
      </description>
    </attribute>
    
    <attribute>
      <name>fromRequestURI</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        This parameter is used only with scope=request. AjaxMessageQueue will be received
        messages from queue where messages are added with this requestURI.
      </description>
    </attribute>  
 
     <attribute>
      <name>format</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
      	Format of message.
      </description>
    </attribute>
           
    <attribute>
      <name>frequency</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Interval (not frequency) between refreshes, in seconds. 
        Defaults to 2 seconds. This number will be multiplied by the current decay 
        when invoking theAjax.Updater object 
      </description>
    </attribute>

    <attribute>
      <name>decay</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Keeps the current decay level applied when re-executing the task.
      </description>
    </attribute>

    <attribute>
      <name>batchSize</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
       	Number of messages to poll in each request. If not specified, defaults to 10. 
      </description>
    </attribute>
    
    <attribute>
      <name>startPollingOnLoad</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        true if AjaxMessageQueue must start poll messages from server when 
        page is loaded, false otherwise. By default startPollingOnLoad=false.
      </description>
    </attribute>    

    <attribute>
      <name>stopPollingAtEmptyMessageReceived</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
		true if AjaxMessageQueue must stop polling messages when it received empty message,
		and false otherwise. By default stopPollingAtEmptyMessageReceived=true.
      </description>
    </attribute>  

	<attribute>
      <name>onStartPolling</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Callback called when AjaxMessageQueue start polling messages.
      </description>
    </attribute> 

	<attribute>
      <name>onStopPolling</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Callback called when AjaxMessageQueue stop polling messages.
      </description>
    </attribute> 
    
    <attribute>
      <name>isStopPolling</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Function to stop polling with custom condition.
      </description>
    </attribute> 
    
	<attribute>
      <name>onEmptyMessageReceived</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Callback called when AjaxMessageQueue received empty message.
      </description>
    </attribute>     

	<attribute>
      <name>onMessageReceived</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        Callback called when AjaxMessageQueue received message.
      </description>
    </attribute>     

	<attribute>
      <name>defaultMessageReceived</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        true if default message received (insertion of message into source container)
		must be executed and false otherwise. By default defaultMessageReceived=true
      </description>
    </attribute>        
    
    <attribute>
      <name>repeatAfterEmptyMessageReceived</name>
      <required>false</required>
      <rtexprvalue>true</rtexprvalue>
      <description>
        
      </description>
    </attribute> 

  </tag>
  
</taglib>
